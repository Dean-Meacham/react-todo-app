{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/macproretina/Desktop/UI-E/react-todo-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/macproretina/Desktop/UI-E/react-todo-app/src/App.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  margin: 0px;\\n  padding: 0px;\\n  \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport './App.css';\nimport Todo from './Todo';\nimport Header from './Header';\nimport styled from 'styled-components';\nconst AppWrap = styled.div(_templateObject());\nexport default class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: [{\n        // id: 1,\n        description: \"a thing\",\n        completed: false\n      }, {\n        // id: 2,\n        description: \"a thing\",\n        completed: true\n      }, {\n        // id: 3,\n        description: \"a thing\",\n        completed: false\n      }],\n      newTodoDesc: ''\n    };\n\n    this.newTodo = e => {\n      this.setState({\n        newTodoDesc: e.target.value\n      });\n    };\n\n    this.addTodo = () => {\n      let todos = this.state.todos;\n      todos.push({\n        description: this.state.newTodoDesc,\n        completed: false\n      });\n      this.setState({\n        todos: todos,\n        newTodoDesc: ''\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(AppWrap, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(ListContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(ListItems, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.state.todos.map((todo, index) => React.createElement(Todo, {\n      key: index,\n      todo: todo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }))), React.createElement(ListItems, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      placeholder: \"add new\",\n      value: this.state.newTodoDesc,\n      onChange: this.newTodo,\n      onKeyDown: e => e.key === 'Enter' ? this.addTodo() : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(ButtonPrimary, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Add\")))) // <div className=\"App\" >\n    //   {/* <h1> TaDa!List </h1> */}\n    //   <Header />\n    //   <ul className=\"listItems\" >\n    //     {this.state.todos.map((todo, index) => (\n    //       <Todo key={index} todo={todo} />\n    // <li key={index} id=\"item\">\n    //   <input type=\"checkbox\" id=\"check\" defaultChecked={todo.completed} />\n    //   {todo.description}\n    //   <img src={cancelImg} alt=\"cancel-icon\" />\n    // </li>\n    //     ))\n    //     }\n    //   </ul>\n    //   <div className=\"addItem\">\n    //     <input\n    //       type=\"text\"\n    //       value={this.state.newTodoDesc}\n    //       onChange={this.newTodo}\n    //       onKeyDown={(e) => e.key === 'Enter' ? this.addTodo() : ''}\n    //     />\n    //     <button id=\"btn\" onClick={this.addTodo}>Add item</button>\n    //   </div>\n    // </div>\n    ;\n  }\n\n}","map":{"version":3,"sources":["/Users/macproretina/Desktop/UI-E/react-todo-app/src/App.js"],"names":["React","Todo","Header","styled","AppWrap","div","App","Component","state","todos","description","completed","newTodoDesc","newTodo","e","setState","target","value","addTodo","push","render","map","todo","index","key"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,OAAO,GAAGD,MAAM,CAACE,GAAV,mBAAb;AAKA,eAAe,MAAMC,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC/CC,KAD+C,GACvC;AACNC,MAAAA,KAAK,EAAE,CACL;AACE;AACAC,QAAAA,WAAW,EAAE,SAFf;AAGEC,QAAAA,SAAS,EAAE;AAHb,OADK,EAML;AACE;AACAD,QAAAA,WAAW,EAAE,SAFf;AAGEC,QAAAA,SAAS,EAAE;AAHb,OANK,EAWL;AACE;AACAD,QAAAA,WAAW,EAAE,SAFf;AAGEC,QAAAA,SAAS,EAAE;AAHb,OAXK,CADD;AAkBNC,MAAAA,WAAW,EAAE;AAlBP,KADuC;;AAAA,SAsB/CC,OAtB+C,GAsBrCC,CAAC,IAAI;AACb,WAAKC,QAAL,CAAc;AAAEH,QAAAA,WAAW,EAAEE,CAAC,CAACE,MAAF,CAASC;AAAxB,OAAd;AACD,KAxB8C;;AAAA,SA0B/CC,OA1B+C,GA0BrC,MAAM;AACd,UAAIT,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAvB;AACAA,MAAAA,KAAK,CAACU,IAAN,CAAW;AACTT,QAAAA,WAAW,EAAE,KAAKF,KAAL,CAAWI,WADf;AAETD,QAAAA,SAAS,EAAE;AAFF,OAAX;AAIA,WAAKI,QAAL,CAAc;AAAEN,QAAAA,KAAK,EAAEA,KAAT;AAAgBG,QAAAA,WAAW,EAAE;AAA7B,OAAd;AACD,KAjC8C;AAAA;;AAmC/CQ,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKZ,KAAL,CAAWC,KAAX,CAAiBY,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,KACpB,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,KAAX;AAAkB,MAAA,IAAI,EAAED,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CADF,EAME,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,WAAW,EAAC,SAAvB;AACE,MAAA,KAAK,EAAE,KAAKd,KAAL,CAAWI,WADpB;AAEE,MAAA,QAAQ,EAAE,KAAKC,OAFjB;AAGE,MAAA,SAAS,EAAGC,CAAD,IAAOA,CAAC,CAACU,GAAF,KAAU,OAAV,GAAoB,KAAKN,OAAL,EAApB,GAAqC,EAHzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANF,CANF,CAFF,CADF,CA0BE;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAnDF;AAqDD;;AAzF8C","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Todo from './Todo';\nimport Header from './Header';\nimport styled from 'styled-components';\n\nconst AppWrap = styled.div`\n  margin: 0px;\n  padding: 0px;\n  `\n\nexport default class App extends React.Component {\n  state = {\n    todos: [\n      {\n        // id: 1,\n        description: \"a thing\",\n        completed: false,\n      },\n      {\n        // id: 2,\n        description: \"a thing\",\n        completed: true,\n      },\n      {\n        // id: 3,\n        description: \"a thing\",\n        completed: false,\n      },\n    ],\n    newTodoDesc: ''\n  }\n\n  newTodo = e => {\n    this.setState({ newTodoDesc: e.target.value })\n  }\n\n  addTodo = () => {\n    let todos = this.state.todos\n    todos.push({\n      description: this.state.newTodoDesc,\n      completed: false\n    })\n    this.setState({ todos: todos, newTodoDesc: '' })\n  }\n\n  render() {\n    return (\n      <AppWrap>\n        <Header />\n        <ListContainer>\n          <ListItems>\n            {this.state.todos.map((todo, index) => (\n              <Todo key={index} todo={todo} />\n            ))}\n          </ListItems>\n          <ListItems>\n            <TextField placeholder=\"add new\"\n              value={this.state.newTodoDesc}\n              onChange={this.newTodo}\n              onKeyDown={(e) => e.key === 'Enter' ? this.addTodo() : ''}>\n            </TextField>\n            <ButtonPrimary>\n              Add\n            </ButtonPrimary>\n          </ListItems>\n        </ListContainer>\n      </AppWrap>\n\n\n\n\n\n      // <div className=\"App\" >\n      //   {/* <h1> TaDa!List </h1> */}\n      //   <Header />\n      //   <ul className=\"listItems\" >\n      //     {this.state.todos.map((todo, index) => (\n      //       <Todo key={index} todo={todo} />\n\n      // <li key={index} id=\"item\">\n      //   <input type=\"checkbox\" id=\"check\" defaultChecked={todo.completed} />\n      //   {todo.description}\n      //   <img src={cancelImg} alt=\"cancel-icon\" />\n      // </li>\n      //     ))\n      //     }\n      //   </ul>\n      //   <div className=\"addItem\">\n      //     <input\n      //       type=\"text\"\n      //       value={this.state.newTodoDesc}\n      //       onChange={this.newTodo}\n      //       onKeyDown={(e) => e.key === 'Enter' ? this.addTodo() : ''}\n      //     />\n\n      //     <button id=\"btn\" onClick={this.addTodo}>Add item</button>\n      //   </div>\n      // </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}